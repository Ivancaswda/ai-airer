import {NextRequest, NextResponse} from "next/server";
import getServerUser from "@/lib/auth-server";
import {GoogleGenerativeAI} from "@google/generative-ai";
import {safeParseJSON} from "@/app/api/aimodel/route";
import {aj} from "@/app/api/arcjet/route";
import {redirect} from "next/navigation";
import {handleGeminiError} from "@/lib/utils";


const GEMINI_API_KEY = process.env.GEMINI_API_KEY!;

const RECOMMENDATION_PROMPT = `
–¢—ã ‚Äî —É–º–Ω—ã–π —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ó–∞–¥–∞–≤–∞–π **–ø–æ –æ–¥–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –∑–∞ —Ä–∞–∑** –∏ –∂–¥–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É.

–ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ:

1. –ö–∞–∫–æ–π —Å—Ç–∏–ª—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π —Ç–µ–±–µ –±–ª–∏–∂–µ? (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", "–û—Ç–¥—ã—Ö", "–ö—É–ª—å—Ç—É—Ä–∞", "–ü—Ä–∏—Ä–æ–¥–∞")
2. –ö–∞–∫–æ–π –∫–ª–∏–º–∞—Ç —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å? (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π", "–•–æ–ª–æ–¥–Ω—ã–π", "–£–º–µ—Ä–µ–Ω–Ω—ã–π")
3. –ö–∞–∫–æ–π —É —Ç–µ–±—è –±—é–¥–∂–µ—Ç –¥–ª—è –ø–æ–µ–∑–¥–∫–∏? (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ù–∏–∑–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–í—ã—Å–æ–∫–∏–π")
4. –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è? (–Ω–∞–ø—Ä–∏–º–µ—Ä: "1 –Ω–µ–¥–µ–ª—è", "2 –Ω–µ–¥–µ–ª–∏", "10 –¥–Ω–µ–π")

**–°–¢–†–û–ì–û –û–ë–Ø–ó–ê–¢–ï–õ–ï–ù JSON-–û–¢–í–ï–¢**
–í–æ–∑–≤—Ä–∞—â–∞–π —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω JSON-–æ–±—ä–µ–∫—Ç:

{
  "resp": "–¢–≤–æ–π —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
  "ui": "taste" | "climate" | "budget" | "time" | "destinationRecommendation" 
}

–ï—Å–ª–∏ –Ω–µ–ª—å–∑—è –∑–∞–¥–∞—Ç—å –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å (–∂–¥—ë—à—å –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π), –≤–µ—Ä–Ω–∏:

{
  "resp": "–Ø –≤—Å—ë –µ—â—ë –∂–¥—É –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å.",
  "ui": "waitingForUserInput"
}

‚ö†Ô∏è –ù–∏–∫–∞–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤–Ω–µ JSON, –Ω–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π, —Ç–æ–ª—å–∫–æ JSON.

–ü—Ä–∞–≤–∏–ª–∞:
- –ü—Ä–∏–Ω–∏–º–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã —Ä–æ–≤–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: —Å—Ç–∏–ª—å ‚Üí ("–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", "–û—Ç–¥—ã—Ö", "–ö—É–ª—å—Ç—É—Ä–∞", "–ü—Ä–∏—Ä–æ–¥–∞"), –∫–ª–∏–º–∞—Ç ‚Üí ("–¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π", "–•–æ–ª–æ–¥–Ω—ã–π", "–£–º–µ—Ä–µ–Ω–Ω—ã–π"), –±—é–¥–∂–µ—Ç ‚Üí ("–ù–∏–∑–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–í—ã—Å–æ–∫–∏–π").
- –ü–æ—Å–ª–µ –≤—Å–µ—Ö –æ—Ç–≤–µ—Ç–æ–≤ –≤—ã–¥–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é —Å—Ç—Ä–∞–Ω—ã.
`;

const RECOMMENDATION_FINAL_PROMPT = `
–ò—Å–ø–æ–ª—å–∑—É—è –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é —Å—Ç—Ä–∞–Ω—ã –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è.  
–í–µ—Ä–Ω–∏ **—Å—Ç—Ä–æ–≥–æ JSON** –≤ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:

{
  "recommended_country": "string", // –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
  "recommended_location": "string", // –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–≥–æ –º–µ—Å—Ç–∞ –≤ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–µ
  "reason": "string" // –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ, –ø–æ—á–µ–º—É —ç—Ç–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
}

‚ö†Ô∏è –í–∞–∂–Ω–æ:
- –°—Ç—Ä–∞–Ω–∞ –∏ –ª–æ–∫–∞—Ü–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–º–∏.
- –í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ JSON –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π –∏ –±–µ–∑ markdown.
`;

export async function POST(req: NextRequest) {
    try {
        const { messages, isFinal } = await req.json();
        const user = await getServerUser();
        if (!user) {
            return NextResponse.json({ error: "No authorized" }, { status: 401 });
        }



        const isPrem = user?.isPrem ?? false;


        if (!user || !user.userId) {
            return NextResponse.json({ error: "No authorized"})
        }

        if (!user?.isPrem) {
            const decision = await aj.protect(req, { userId: user.userId, requested: 1 });

            if (decision.isDenied()) {
                return NextResponse.json({ error: "Free limit exceeded", redirect: "/premium" }, { status: 403 });
            }
        }

        const genAI = new GoogleGenerativeAI(GEMINI_API_KEY);
        const model = genAI.getGenerativeModel({ model: "gemini-2.5-flash" });

        const fullPrompt = [
            { role: "system", content: isFinal ? RECOMMENDATION_FINAL_PROMPT : RECOMMENDATION_PROMPT },
            ...messages.map(({ role, content }: any) => ({ role, content })),
        ];

        const result = await model.generateContent(fullPrompt.map(m => m.content).join("\n"));

        const parsed = safeParseJSON(result.response.text());
        if (!parsed.ok) {
            return NextResponse.json({ error: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –æ—Ç Gemini", raw: result.response.text() }, { status: 500 });
        }

        return NextResponse.json(parsed.data);

    } catch (err: any) {
        const error = handleGeminiError(err);
        console.error("‚ùå –û—à–∏–±–∫–∞ –≤ /api/budget Gemini SDK:", err);

        if (error.isLocationError) {
            return NextResponse.json({ error: error.message, code: "LOCATION_BLOCKED" }, { status: 403 });
        }
        if (err?.response?.status === 429) {
            return NextResponse.json(
                { error: "üö¶ –õ–∏–º–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ API-–∫–ª—é—á –¥–æ—Å—Ç–∏–≥–Ω—É—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", code: "QUOTA_EXCEEDED" },
                { status: 429 }
            );
        }


        return NextResponse.json({ error: error.message }, { status: 500 });
    }
}
