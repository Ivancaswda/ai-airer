import { NextRequest, NextResponse } from "next/server";
import { GoogleGenerativeAI } from "@google/generative-ai";
import { safeParseJSON } from "@/app/api/aimodel/route";
import getServerUser from "@/lib/auth-server";
import {handleGeminiError} from "@/lib/utils";

const GEMINI_API_KEY = process.env.GEMINI_API_KEY!;

const BUDGET_PLANNING_PROMPT = `
–¢—ã ‚Äî —É–º–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é –±—é–¥–∂–µ—Ç–∞ –ø–æ–µ–∑–¥–∫–∏.  
–¢—ã –æ–±—è–∑–∞–Ω –∑–∞–¥–∞–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **–ø–æ –æ–¥–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –∑–∞ —Ä–∞–∑** –≤ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.  
–°–ª–µ–¥–∏ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º: –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π —É–∂–µ –∑–∞–¥–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏ —Å—Ç—Ä–æ–≥–æ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É.

–ü–æ—Ä—è–¥–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤:

1. –ì–æ—Ä–æ–¥ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ü–∞—Ä–∏–∂", "–†–æ—Å—Å–∏—è")
2. –ì–æ—Ä–æ–¥ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ù—å—é-–ô–æ—Ä–∫", "–Ø–ø–æ–Ω–∏—è")
3. –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º–∞—è –≤–∞–ª—é—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "USD", "EUR", "RUB")
4. –ü—Ä–∏–º–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –±—é–¥–∂–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ù–∏–∑–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–í—ã—Å–æ–∫–∏–π")
5. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "1 –Ω–µ–¥–µ–ª—è", "2 –Ω–µ–¥–µ–ª–∏", "15 –¥–Ω–µ–π")

**–°–¢–†–û–ì–û –¢–û–õ–¨–ö–û JSON-–û–¢–í–ï–¢**
–í–µ—Ä–Ω–∏ —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω JSON-–æ–±—ä–µ–∫—Ç:

{
  "resp": "–¢–µ–∫—Å—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
  "ui": "departure" | "destination" | "currency" | "budget" | "time" | "final",
  "step": number
}

–ü—Ä–∞–≤–∏–ª–∞:
- "resp" ‚Äî —ç—Ç–æ —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞ —Ä—É—Å—Å–∫–æ–º).
- "ui" –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–º—É —à–∞–≥—É.
- "step" ‚Äî –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞ (1‚Äì5). –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–π "final" –∏ step = 6.
- –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–π –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å –∏ –Ω–µ –∏–¥–∏ –Ω–∞–∑–∞–¥.
`;

const FINAL_BUDGET_PROMPT = `
–ò—Å–ø–æ–ª—å–∑—É—è —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–µ–∑–¥–∫–µ, —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π **–ø–æ–ª–Ω—É—é –±—é–¥–∂–µ—Ç–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é** –≤ **—Å—Ç—Ä–æ–≥–æ–º —Ñ–æ—Ä–º–∞—Ç–µ JSON**.  
–í–µ—Ä–Ω–∏ —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω JSON-–æ–±—ä–µ–∫—Ç –ø–æ —ç—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:

{
  "trip_details": {
    "origin": "string",              // –≥–æ—Ä–æ–¥ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    "destination": "string",         // –≥–æ—Ä–æ–¥ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    "currency": "string",            // –≤–∞–ª—é—Ç–∞
    "budget_level": "string",        // —É—Ä–æ–≤–µ–Ω—å –±—é–¥–∂–µ—Ç–∞
    "trip_duration": "string",       // –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏
    "total_budget": "number",        // –ø—Ä–∏–º–µ—Ä–Ω—ã–π –æ–±—â–∏–π –±—é–¥–∂–µ—Ç
    "recommendations": [
      {
        "category": "–†–∞–∑–º–µ—â–µ–Ω–∏–µ" | "–ï–¥–∞" | "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç" | "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è" | "–®–æ–ø–ø–∏–Ω–≥",
        "recommendation": "string",  // —Å–æ–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º
        "estimated_cost": "number"   // –ø—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
      },
      {
        "category": "–†–∞–∑–º–µ—â–µ–Ω–∏–µ",
        "recommendation": "–ù–µ–¥–æ—Ä–æ–≥–∏–µ –æ—Ç–µ–ª–∏ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏",
        "estimated_cost": 100
      }
    ],
    "final_estimation": {
      "total_cost_estimate": "number",      // —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
      "suggested_adjustments": "string"     // –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–µ –±—é–¥–∂–µ—Ç–∞ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º)
    }
  }
}

‚ö†Ô∏è –í–∞–∂–Ω–æ:
- –í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ JSON –±–µ–∑ markdown –∏ –ø–æ—è—Å–Ω–µ–Ω–∏–π.
- –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–æ–ª—è, –±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏—à–Ω–∏—Ö.
- –í—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º.
- –í—Å–µ —Å—É–º–º—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏ –∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º–∏ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –±—é–¥–∂–µ—Ç–∞.
`;

export async function POST(req: NextRequest) {
    try {
        const { messages, isFinal } = await req.json();
        const genAI = new GoogleGenerativeAI(GEMINI_API_KEY);

        const model = genAI.getGenerativeModel({ model: "gemini-2.5-flash" });
        const user = await getServerUser();
        if (!user) {
            return NextResponse.json({ error: "No authorized"})
        }

        if (!user?.isPrem) {
            return NextResponse.json({ error: "Premium required" }, { status: 403 });
        }

        const fullPrompt = [
            { role: "system", content: isFinal ? FINAL_BUDGET_PROMPT : BUDGET_PLANNING_PROMPT },
            ...messages.map(({ role, content }: any) => ({ role, content })),
        ];

        const result = await model.generateContent(fullPrompt.map(m => m.content).join("\n"));
        const parsed = safeParseJSON(result.response.text());

        if (!parsed.ok) {
            return NextResponse.json({ error: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –æ—Ç Gemini", raw: result.response.text() }, { status: 500 });
        }

        return NextResponse.json(parsed.data);
    } catch (err: any) {
        const error = handleGeminiError(err);
        console.error("‚ùå –û—à–∏–±–∫–∞ –≤ /api/budget Gemini SDK:", err);

        if (error.isLocationError) {
            return NextResponse.json({ error: error.message, code: "LOCATION_BLOCKED" }, { status: 403 });
        }
        if (err?.response?.status === 429) {
            return NextResponse.json(
                { error: "üö¶ –õ–∏–º–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ API-–∫–ª—é—á –¥–æ—Å—Ç–∏–≥–Ω—É—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", code: "QUOTA_EXCEEDED" },
                { status: 429 }
            );
        }

        return NextResponse.json({ error: error.message }, { status: 500 });
    }
}
